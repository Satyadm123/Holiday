class SequenceMatcher(stringA: String, stringB: String) {
  /**
  * ratio()
  * @return Return a measure of the sequencesâ€™ similarity as a float in the range [0, 1]
  */
  def ratio(): Double = {
    (2.0 * numOfMatches()) / (stringA.length() + stringB.length())
  }
  /**
  * numOfMatches()
  * @return number of characters that match in the two strings
  */
  def numOfMatches(): Long = {
    stringA.intersect(stringB).length()
  }
}


val df1 = Seq (1, 2, 3, 4).toDF("x")
val df2 = Seq(1, 3, 7, 11).toDF("q")
val udf = org.apache.spark.sql.functions.udf((x : Int, q : Int) => { Math.abs(x - q); });
val df3 = df1.join(df2, udf(df1("x"), df2("q")) > 1)
